name: Build and test
run-name: ${{ github.actor }} on ${{ github.ref }}
on: 
    push:
        branches:
            - main
            - ci
            - 'check/**'
    pull_request:
        branches:
            - main
            - ci
            - 'check/**'
jobs:
    build:
        runs-on: ${{matrix.os}}
        strategy:
            fail-fast: false

            matrix:
                os: [ubuntu-latest]
                build_type: [Debug, Release]
        steps:
            - uses: actions/checkout@v4
              with: 
                submodules: 'recursive'
            - uses: actions/setup-python@v5
              with:
                python-version: '3.10'
                cache: 'pip'
            - name: Install Tools
              run: |
                sudo apt-get update
                sudo apt-get install  -y gcc g++ cmake ninja-build protobuf-compiler
                pip install -r 3rdparty/onnx-mlir/requirements.txt
            - name: Cache LLVM 
              id: cache-llvm
              uses: actions/cache@v3
              with:
                path: 3rdparty/llvm-project/build
                key: llvm-${{ hashFiles('**/configure-llvm.sh','**/build-llvm.sh') }}-${{ github.ref }}
                restore-keys: |
                    llvm-${{ hashFiles('**/configure-llvm.sh','**/build-llvm.sh') }}
                    llvm-
            - name: Configure&Build LLVM CMake
              if: steps.cache-llvm.outputs.cache-hit != 'true'
              run: |
                sh utils/configure-llvm.sh
                sh utils/build-llvm.sh
            - name: Configure CMake
              run: cmake -G Ninja -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            - name: Build
              run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}